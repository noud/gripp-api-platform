<?php

namespace App\Entity;

use ApiPlatform\Core\Annotation\ApiResource;
use Doctrine\ORM\Mapping as ORM;

/**
 * Timelineentry
 *
 * @ApiResource
 * @ORM\Table(name="timelineentry", indexes={@ORM\Index(name="FK_TimelineentryPurchaseinvoice", columns={"purchaseinvoice"}), @ORM\Index(name="FK_TimelineentryContract", columns={"contract"}), @ORM\Index(name="FK_TimelineentryContact", columns={"contact"}), @ORM\Index(name="FK_TimelineentryProject", columns={"project"}), @ORM\Index(name="FK_TimelineentryInvoice", columns={"invoice"}), @ORM\Index(name="FK_TimelineentryPurchaseorder", columns={"purchaseorder"}), @ORM\Index(name="FK_TimelineentryTask", columns={"task"}), @ORM\Index(name="FK_TimelineentryCompany", columns={"company"}), @ORM\Index(name="FK_TimelineentryOffer", columns={"offer"})})
 * @ORM\Entity(repositoryClass="App\Repository\TimelineentryRepository")
 */
class Timelineentry extends \App\Entity\AbstractEntity\AbstractNameEntity
{
    /**
     * @var Employee|null
     *
     * @ORM\ManyToOne(targetEntity="App\Entity\Employee")
     * @ORM\JoinColumn(name="employee", referencedColumnName="id")
     */
    private $employee;

    /**
     * @var \DateTime|null
     *
     * @ORM\Column(name="date", type="datetime", nullable=true)
     */
    private $date;

    /**
     * @var string|null
     *
     * @ORM\Column(name="message", type="string", length=255, nullable=true)
     */
    private $message;

    /**
     * @var string|null
     *
     * @ORM\Column(name="timelinetype", type="string", length=0, nullable=true)
     */
    private $timelinetype;

    /**
     * @var bool|null
     *
     * @ORM\Column(name="starred", type="boolean", nullable=true)
     */
    private $starred;

    /**
     * @var int|null
     *
     * @ORM\Column(name="files", type="bigint", nullable=true)
     */
    private $files;

    /**
     * @var \Company
     *
     * @ORM\ManyToOne(targetEntity="Company")
     * @ORM\JoinColumns({
     *   @ORM\JoinColumn(name="company", referencedColumnName="id")
     * })
     */
    private $company;

    /**
     * @var \Contact
     *
     * @ORM\ManyToOne(targetEntity="Contact")
     * @ORM\JoinColumns({
     *   @ORM\JoinColumn(name="contact", referencedColumnName="id")
     * })
     */
    private $contact;

    /**
     * @var \Contract
     *
     * @ORM\ManyToOne(targetEntity="Contract")
     * @ORM\JoinColumns({
     *   @ORM\JoinColumn(name="contract", referencedColumnName="id")
     * })
     */
    private $contract;

    /**
     * @var \Invoice
     *
     * @ORM\ManyToOne(targetEntity="Invoice")
     * @ORM\JoinColumns({
     *   @ORM\JoinColumn(name="invoice", referencedColumnName="id")
     * })
     */
    private $invoice;

    /**
     * @var \Offer
     *
     * @ORM\ManyToOne(targetEntity="Offer")
     * @ORM\JoinColumns({
     *   @ORM\JoinColumn(name="offer", referencedColumnName="id")
     * })
     */
    private $offer;

    /**
     * @var \Project
     *
     * @ORM\ManyToOne(targetEntity="Project")
     * @ORM\JoinColumns({
     *   @ORM\JoinColumn(name="project", referencedColumnName="id")
     * })
     */
    private $project;

    /**
     * @var \Purchaseinvoice
     *
     * @ORM\ManyToOne(targetEntity="Purchaseinvoice")
     * @ORM\JoinColumns({
     *   @ORM\JoinColumn(name="purchaseinvoice", referencedColumnName="id")
     * })
     */
    private $purchaseinvoice;

    /**
     * @var \Purchaseorder
     *
     * @ORM\ManyToOne(targetEntity="Purchaseorder")
     * @ORM\JoinColumns({
     *   @ORM\JoinColumn(name="purchaseorder", referencedColumnName="id")
     * })
     */
    private $purchaseorder;

    /**
     * @var \Task
     *
     * @ORM\ManyToOne(targetEntity="Task")
     * @ORM\JoinColumns({
     *   @ORM\JoinColumn(name="task", referencedColumnName="id")
     * })
     */
    private $task;

    public function getEmployee(): ?Employee
    {
        return $this->employee;
    }

    public function setEmployee(?int $employee): self
    {
        $this->employee = $employee;

        return $this;
    }

    public function getDate(): ?\DateTimeInterface
    {
        return $this->date;
    }

    public function setDate(?\DateTimeInterface $date): self
    {
        $this->date = $date;

        return $this;
    }

    public function getMessage(): ?string
    {
        return $this->message;
    }

    public function setMessage(?string $message): self
    {
        $this->message = $message;

        return $this;
    }

    public function getTimelinetype(): ?string
    {
        return $this->timelinetype;
    }

    public function setTimelinetype(?string $timelinetype): self
    {
        $this->timelinetype = $timelinetype;

        return $this;
    }

    public function getStarred(): ?bool
    {
        return $this->starred;
    }

    public function setStarred(?bool $starred): self
    {
        $this->starred = $starred;

        return $this;
    }

    public function getFiles(): ?int
    {
        return $this->files;
    }

    public function setFiles(?int $files): self
    {
        $this->files = $files;

        return $this;
    }

    public function getCompany(): ?Company
    {
        return $this->company;
    }

    public function setCompany(?Company $company): self
    {
        $this->company = $company;

        return $this;
    }

    public function getContact(): ?Contact
    {
        return $this->contact;
    }

    public function setContact(?Contact $contact): self
    {
        $this->contact = $contact;

        return $this;
    }

    public function getContract(): ?Contract
    {
        return $this->contract;
    }

    public function setContract(?Contract $contract): self
    {
        $this->contract = $contract;

        return $this;
    }

    public function getInvoice(): ?Invoice
    {
        return $this->invoice;
    }

    public function setInvoice(?Invoice $invoice): self
    {
        $this->invoice = $invoice;

        return $this;
    }

    public function getOffer(): ?Offer
    {
        return $this->offer;
    }

    public function setOffer(?Offer $offer): self
    {
        $this->offer = $offer;

        return $this;
    }

    public function getProject(): ?Project
    {
        return $this->project;
    }

    public function setProject(?Project $project): self
    {
        $this->project = $project;

        return $this;
    }

    public function getPurchaseinvoice(): ?Purchaseinvoice
    {
        return $this->purchaseinvoice;
    }

    public function setPurchaseinvoice(?Purchaseinvoice $purchaseinvoice): self
    {
        $this->purchaseinvoice = $purchaseinvoice;

        return $this;
    }

    public function getPurchaseorder(): ?Purchaseorder
    {
        return $this->purchaseorder;
    }

    public function setPurchaseorder(?Purchaseorder $purchaseorder): self
    {
        $this->purchaseorder = $purchaseorder;

        return $this;
    }

    public function getTask(): ?Task
    {
        return $this->task;
    }

    public function setTask(?Task $task): self
    {
        $this->task = $task;

        return $this;
    }


}
